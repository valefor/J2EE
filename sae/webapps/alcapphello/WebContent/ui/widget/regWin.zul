<?component name="timedJump" inline="true" macroURI="/ui/macro/timedJump.zul"?>
<zk>
<window id="regWin" self="@define(content)" title="${labels.app.registration}!" xmlns:c="client" border="normal" width="400px" apply="${labels.classes.ctrl.register}">
	<grid vflex="min">
		<rows>
			<row>
				<label value="${labels.app.username}" />
				<textbox id="nameBox" constraint="no empty:${labels.err.noEmpty}"/>	
			</row>
			<row>
				<label value="${labels.app.password}" />
				<textbox id="pwdBox" constraint="no empty;/.{8,24}/: ${labels.err.invalidPwd}" type="password"/>	
			</row>
			<row>
				<label value="${labels.app.confirmPassword}" />
				<textbox id="cfmPwdBox" constraint="no empty:${labels.err.noEmpty}" type="password"/>	
			</row>
			<row>
				<label value="${labels.app.email}" />
				<textbox id="emailBox" constraint="no empty;/.+@.+\.[a-z]+/: ${labels.err.invalidEmail}"/>	
			</row>
			<row>
				<label value="${labels.app.gender}" />
				<radiogroup>
					<radio label="${labels.app.male}" image="/images/icons/male.png" checked="true"/>
					<radio label="${labels.app.female}" image="/images/icons/female.png"/>
				</radiogroup>
			</row>
			<row>
				<label value="${labels.app.birthday}"/>
				<datebox id="birthdayBox" constraint="no empty, no today, no future"/>
			</row>
			<row spans="2" align="right">
				<hlayout>
					<button label="${labels.app.reset}" onClick='alert("Hello"+self.getAction()+":"+event.getName())' id="resetButton" />
					<button label="${labels.app.submit}" onClick="" id="submitButton" c:verdict="{bits: 0}" disabled="true" type="submit"/>
				</hlayout>
			</row>
		</rows>
	</grid>
	<script defer="true">
		function vote(n) {
			var btn = zk.Widget.$('$submitButton');
			btn.verdict = bitSet(btn.verdict,n);
			console.log(btn.verdict);
			if (btn.verdict == 15) {
				if (zk.Widget.$('$nameBox').getErrorMessage() == null) {
					btn.setDisabled(false);
				}
			}
		}
		
		function devote(n) {
			var btn = zk.Widget.$('$submitButton');
			btn.verdict = bitReset(btn.verdict,n);
			console.log(btn.verdict);
			btn.setDisabled(true);
		}
		
		zk.Widget.$('$pwdBox').listen({
			onBlur: function () {
				if (this.getErrorMessage() != null) {
					console.log("invalid password");
					devote(0);
					//if (bitIsset(btn.verdict,1))
				} else {
					vote(0);
				}
			}
		});
		zk.Widget.$('$cfmPwdBox').listen({
			onBlur: function () {
				this.clearErrorMessage(0,0);
				if (this.getValue() != this.$f('pwdBox').getValue()) {
					this.setErrorMessage("${labels.err.passwordMismatch}");
					devote(1);
					//if (bitIsset(btn.verdict,1))
				} else {
					vote(1);
				}
			}
		});
		zk.Widget.$('$emailBox').listen({
			onBlur: function () {
				if (this.getErrorMessage() != null) {
					console.log("invalid email");
					devote(2);
					//if (bitIsset(btn.verdict,1))
				} else {
					vote(2);
				}
			}
		});
		zk.Widget.$('$birthdayBox').listen({
			onBlur: function () {
				if (this.getErrorMessage() != null) {
					console.log("invalid birthday");
					console.log(this.getErrorMessage());
					devote(3);
					//if (bitIsset(btn.verdict,1))
				} else {
					vote(3);
				}
			}
		});
		zk.Widget.$('$nameBox').listen({
			onError: function () {
				if (this.getErrorMessage() != null) {
					console.log("invalid name");
					console.log(this.getErrorMessage());
					btn.setDisabled(true);
				}
			}
		});
	</script>
</window>
</zk>
