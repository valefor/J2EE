 	<!-- Database 
 	<bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
 		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
 		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/forum" />
        <property name="user" value="root" />
        <property name="password" value="111111" />
 	</bean>
 	-->
 	
 	<!-- JPA -->
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- set other Hibernate properties in hibernate.cfg.xml file -->
        <property name="configLocation" value="/WEB-INF/hibernate.cfg.xml" />
    </bean>
     
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
     
    <!-- for using annotation @Transaction in DAOs -->
    <tx:annotation-driven />
 
<http access-decision-manager-ref="affirmativeBased" auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
UsernamePasswordAuthenticationFilter


		<!-- ZK AU reqeust -->
		<intercept-url pattern="/zkau/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- the login page: ANONYMOUSE ONLY -->		
		<intercept-url pattern="/public/login.zul" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/public/registration.zul"
			access="ROLE_ANONYMOUS" />
			<intercept-url pattern="/public/j_spring_security_check" access="ROLE_ANONYMOUS" />
		<!-- the login page:IS_AUTHENTICATED_ANONYMOUSLY -->
		<!-- pages for anonymous access in an application -->
		<intercept-url pattern="/index.zul" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/public/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- secure pages -->
		<intercept-url pattern="/mgmt/**"
			access="ROLE_ROOT" />
		<intercept-url pattern="/**"
			access="ROLE_USER" />
			
GrantedAuthority
	@Override
	public String getAuthority() {
		System.out.println(getRole());
		return getRole();
	}
	

${cmpClassLoader.classMap['classes.ctrl.logout']}

#debug page:index.zul
<?page title="Hello World"?>
<window title="${labels.app.hello}" border="normal" width="200px">

	<vlayout>
	<label value="contextPath:${pageContext.request.contextPath}" />
	<label value="servletPath:${pageContext.request.servletPath}" />
	<label value="uri:${pageContext.request.requestURI}" />
	<label value="url:${pageContext.request.requestURL}" />
	<label value="${labels.links.uri.login }" />
	</vlayout>
</window>

Accout: hufei1986818@gmail.com

Domain Name:	sinaapp.com
reCAPTCHA will only work on this domain and subdomains. If you have more than one domain (or a staging server), you can create a new set of keys.

Public Key:	6LdtUuYSAAAAAOoQit2rrvruUS49_oTtbWLiqplu
Use this in the JavaScript code that is served to your users

Private Key:	6LdtUuYSAAAAAF1qozbsOWAJ0btvR_Kf0jnGG1ol
Use this when communicating between your server and our server. Be sure to keep it a secret.

 	<!-- Recaptcha bean -->
 	<bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl"> <!-- ***.sinaapp.com -->
		<property name="privateKey" value="6LdtUuYSAAAAAF1qozbsOWAJ0btvR_Kf0jnGG1ol" /> <!-- private -->
		<property name="publicKey" value="6LdtUuYSAAAAAOoQit2rrvruUS49_oTtbWLiqplu" />	<!-- public -->
		<property name="includeNoscript" value="false" />
	</bean>

							<vlayout>
								<image src="/jcaptcha.jpg"/>
							</vlayout>