 	<!-- Database 
 	<bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
 		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
 		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/forum" />
        <property name="user" value="root" />
        <property name="password" value="111111" />
 	</bean>
 	-->
 	
 	<!-- JPA -->
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- set other Hibernate properties in hibernate.cfg.xml file -->
        <property name="configLocation" value="/WEB-INF/hibernate.cfg.xml" />
    </bean>
     
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
     
    <!-- for using annotation @Transaction in DAOs -->
    <tx:annotation-driven />
 
<http access-decision-manager-ref="affirmativeBased" auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
UsernamePasswordAuthenticationFilter


		<!-- ZK AU reqeust -->
		<intercept-url pattern="/zkau/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- the login page: ANONYMOUSE ONLY -->		
		<intercept-url pattern="/public/login.zul" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/public/registration.zul"
			access="ROLE_ANONYMOUS" />
			<intercept-url pattern="/public/j_spring_security_check" access="ROLE_ANONYMOUS" />
		<!-- the login page:IS_AUTHENTICATED_ANONYMOUSLY -->
		<!-- pages for anonymous access in an application -->
		<intercept-url pattern="/index.zul" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/public/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- secure pages -->
		<intercept-url pattern="/mgmt/**"
			access="ROLE_ROOT" />
		<intercept-url pattern="/**"
			access="ROLE_USER" />
			
GrantedAuthority
	@Override
	public String getAuthority() {
		System.out.println(getRole());
		return getRole();
	}
